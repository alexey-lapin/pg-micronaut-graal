[
{
  "name":"byte[]"
},
{
  "name":"ch.qos.logback.classic.Logger"
},
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.pattern.color.CyanCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.pattern.color.GrayCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.pattern.color.MagentaCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.appdba.markunused.change.MarkUnsedChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.CreateSynonymChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.DropSynonymChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.license.LicenseValidationChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.AddCheckConstraintChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DisableCheckConstraintChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DropCheckConstraintChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.EnableCheckConstraintChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageBodyChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageBodyChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.CreateFunctionChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.DropFunctionChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.CreateTriggerChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DisableTriggerChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DropTriggerChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.EnableTriggerChange",
  "allPublicMethods":true
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.RenameTriggerChange",
  "allPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.JsonDeserializer[]"
},
{
  "name":"com.fasterxml.jackson.databind.JsonSerializer[]"
},
{
  "name":"com.fasterxml.jackson.databind.KeyDeserializer[]"
},
{
  "name":"com.fasterxml.jackson.databind.Module[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.Deserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.KeyDeserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiators[]"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ser.BeanSerializerModifier[]"
},
{
  "name":"com.fasterxml.jackson.databind.ser.Serializers[]"
},
{
  "name":"com.sun.org.apache.xerces.internal.impl.dv.xs.ExtendedSchemaDVFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.xml.internal.stream.events.XMLEventFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.zaxxer.hikari.HikariConfig",
  "allDeclaredFields":true
},
{
  "name":"com.zaxxer.hikari.pool.HikariProxyConnection",
  "methods":[{"name":"getSchema","parameterTypes":[] }]
},
{
  "name":"com.zaxxer.hikari.util.ConcurrentBag$IConcurrentBagEntry[]"
},
{
  "name":"io.micronaut.aop.Interceptor[]"
},
{
  "name":"io.micronaut.buffer.netty.$NettyByteBufferFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.$EntityManagerFactoryBean$HibernateMetadataSources1DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.$EntityManagerFactoryBean$HibernateSessionFactory3DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.$EntityManagerFactoryBean$HibernateSessionFactoryBuilder2DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.$EntityManagerFactoryBean$HibernateStandardServiceRegistry0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.$EntityManagerFactoryBeanDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.$JpaConfiguration$EntityScanConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.$JpaConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.$TransactionalSession$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.$TransactionalSessionInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.condition.$EntitiesInPackageCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.jcache.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.jcache.$HibernateJCacheManagerBinderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.metrics.$HibernateMetricsBinderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.proxy.$IntroducedHibernateProxyAdviceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.proxy.$IntrospectedHibernateBytecodeProviderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.hibernate.jpa.validation.$JPATraversableResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.jdbc.hikari.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.jdbc.hikari.$DatasourceConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.jdbc.hikari.$DatasourceFactory$DataSource0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.configuration.jdbc.hikari.$DatasourceFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.context.env.PropertiesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.context.env.yaml.YamlPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.hibernate.event.$EventIntegratorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.hibernate.naming.$DefaultPhysicalNamingStrategyDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.hibernate.naming.$PhysicalNamingStrategyConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.hibernate.operations.$HibernateJpaOperationsDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.intercept.$DataIntroductionAdviceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.jpa.repository.intercept.$FlushInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.$DefaultPage$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.$DefaultPageable$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.$DefaultSlice$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.$Pageable$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.naming.$NamingStrategies$KebabCase$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.naming.$NamingStrategies$LowerCase$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.naming.$NamingStrategies$Raw$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.naming.$NamingStrategies$UnderScoreSeparatedLowerCase$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.naming.$NamingStrategies$UnderScoreSeparatedUpperCase$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.naming.$NamingStrategies$UpperCase$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.query.builder.$AbstractSqlLikeQueryBuilder$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.query.builder.jpa.$JpaQueryBuilder$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.model.query.builder.sql.$SqlQueryBuilder$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.config.$DataConfiguration$PageableConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.config.$DataConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.date.$CurrentDateTimeProviderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.http.$PageableRequestArgumentBinderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$AbstractQueryInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DataInitializerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultCountInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultDeleteAllInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultDeleteOneInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultExistsByInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultFindAllInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultFindByIdInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultFindOneInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultFindOptionalInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultFindPageInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultFindSliceInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultFindStreamInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultSaveAllInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultSaveEntityInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultSaveOneInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultUpdateEntityInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.$DefaultUpdateInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$AbstractAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultCountAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultDeleteAllAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultDeleteOneAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultExistsByAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultFindAllAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultFindByIdAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultFindOneAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultFindPageAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultFindSliceAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultSaveAllAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultSaveEntityInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultSaveOneAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultUpdateAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.async.$DefaultUpdateEntityAsyncInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$AbstractReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultCountReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultDeleteAllReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultDeleteOneReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultExistsByReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultFindAllReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultFindByIdReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultFindOneReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultFindPageReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultFindSliceReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultSaveAllReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultSaveEntityReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultSaveOneReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateEntityReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateReactiveInterceptor$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.$DefaultCompositeDiscoveryClientDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.$DefaultServiceInstanceIdGeneratorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.config.$DefaultCompositeConfigurationClientDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$DefaultCurrentHealthStatusDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HealthStatus$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatDiscoveryClientCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatTaskDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.HealthStatus",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.micronaut.http.HttpMethod[]"
},
{
  "name":"io.micronaut.http.bind.$DefaultRequestBinderRegistryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultConnectionPoolConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$DefaultHttpClientConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$DefaultLoadBalancerResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceConnectionPoolConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactory$HealthCheckStarter1DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactory$ServiceInstanceList0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.bind.$DefaultHttpClientBinderRegistryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.filter.$DefaultHttpClientFilterResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.interceptor.$HttpClientIntroductionAdviceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.interceptor.configuration.$DefaultClientVersioningConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.interceptor.configuration.$NamedClientVersioningConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.loadbalance.$DiscoveryClientLoadBalancerFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.loadbalance.$LoadBalancerConvertersDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.loadbalance.$ServiceInstanceListLoadBalancerFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.netty.$RxNettyHttpClientRegistry$HttpClient0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.netty.$RxNettyHttpClientRegistryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.netty.NettyClientHttpRequestFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.netty.ssl.$NettyClientSslBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.rxjava2.$RxReactiveClientResultTransformerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.codec.$CodecConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.converters.$HttpConverterRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$AbstractResource$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$DefaultLink$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$JsonError$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$VndError$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.AbstractResource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.micronaut.http.hateoas.DefaultLink",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.micronaut.http.hateoas.JsonError",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.micronaut.http.hateoas.Link",
  "allDeclaredMethods":true
},
{
  "name":"io.micronaut.http.hateoas.Link$Builder",
  "allDeclaredMethods":true
},
{
  "name":"io.micronaut.http.hateoas.Resource",
  "allDeclaredMethods":true
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$DefaultEventLoopGroup1DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroup0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$EpollAvailabilityCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$EpollEventLoopGroupFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$KQueueAvailabilityCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$KQueueEventLoopGroupFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$NettyThreadFactory$NettyThreadFactory0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$NettyThreadFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$NioEventLoopGroupFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.converters.$DefaultChannelOptionFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.converters.$EpollChannelOptionFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.converters.$KQueueChannelOptionFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.reactive.HandlerPublisher",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.micronaut.http.netty.stream.HttpStreamsHandler$2"
},
{
  "name":"io.micronaut.http.netty.stream.HttpStreamsServerHandler",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.micronaut.http.netty.websocket.$NettyServerWebSocketBroadcasterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.websocket.$WebSocketMessageEncoderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$CorsConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$HostResolutionConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$HttpLocaleResolutionConfigurationPropertiesDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$MultipartConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.binding.$LocaleArgumentBinderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.binding.$RequestArgumentSatisfierDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.codec.$TextStreamCodecDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.context.$ServerRequestContextFilterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.context.$ServerRequestContextInstrumentationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.cors.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.cors.$CorsFilterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.cors.$CorsOriginConverterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$ContentLengthExceededHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$ConversionErrorHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$HttpStatusHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$JsonExceptionHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$URISyntaxHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$UnsatisfiedArgumentHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$DefaultHttpCompressionStrategyDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$DefaultHttpContentProcessorResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$FormDataHttpContentSubscriberFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$NettyEmbeddedServerInstanceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$NettyHttpServerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$NettyRequestArgumentSatisfierDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.NettyHttpResponseFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.NettyHttpServer$NettyHttpServerInitializer"
},
{
  "name":"io.micronaut.http.server.netty.RoutingInBoundHandler",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.micronaut.http.server.netty.SmartHttpContentCompressor"
},
{
  "name":"io.micronaut.http.server.netty.binders.$NettyBinderRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$AccessLoggerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Http2SettingsDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$ParentDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$WorkerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.converters.$DuplicateRouteHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.converters.$NettyConvertersDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.converters.$UnsatisfiedRouteHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.decoders.HttpRequestDecoder"
},
{
  "name":"io.micronaut.http.server.netty.encoders.HttpResponseEncoder"
},
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonHttpContentSubscriberFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonViewMediaTypeCodecFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonViewServerFilterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.types.$DefaultCustomizableResponseTypeHandlerRegistryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfiguration$CacheControlConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.websocket.NettyServerWebSocketUpgradeHandler"
},
{
  "name":"io.micronaut.http.server.util.$DefaultHttpClientAddressResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.$DefaultHttpHostResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.locale.$CompositeHttpLocaleResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.locale.$CookieLocaleResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.locale.$HttpFixedLocaleResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.locale.$RequestLocaleResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.locale.HttpLocaleResolver[]"
},
{
  "name":"io.micronaut.http.server.websocket.$ServerWebSocketProcessorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.util.$OutgoingHttpRequestProcessorImplDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$JacksonConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$ObjectMapperFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.bind.$JacksonBeanPropertyBinderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.codec.$JsonMediaTypeCodecDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.codec.$JsonStreamMediaTypeCodecDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.convert.$JacksonConverterRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.env.CloudFoundryVcapApplicationPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.env.CloudFoundryVcapServicesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.env.EnvJsonPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.env.JsonPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.modules.$BeanIntrospectionModuleDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ConvertibleValuesSerializerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$JacksonObjectSerializerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$OptionalValuesSerializerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ResourceModuleDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ResourceSerializerModifierDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jdbc.spring.$DataSourceTransactionManagerFactory$DataSourceTransactionManager0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jdbc.spring.$DataSourceTransactionManagerFactory$TransactionAwareDataSourceListener1DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jdbc.spring.$DataSourceTransactionManagerFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jdbc.spring.$HibernatePresenceCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jdbc.spring.$SpringDataSourceResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.$$AbstractLiquibaseMigrationDefinition$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.$$GormMigrationRunnerDefinition$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.$$LiquibaseMigrationRunnerDefinition$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.$AbstractLiquibaseMigrationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.$GormMigrationRunnerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.$LiquibaseConfigurationPropertiesDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.$LiquibaseMigrationRunnerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.$LiquibaseResourceAccessorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.endpoint.$LiquibaseEndpointDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.endpoint.$LiquibaseReport$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.liquibase.endpoint.$RanChangeSetSerializerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.$PropertiesLoggingLevelsConfigurerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.impl.$Log4jLoggingSystemDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.impl.$LogbackLoggingSystemDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$EndpointConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$EndpointDefaultConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$EndpointEnabledCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$EndpointSensitivityProcessorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.$EndpointsFilterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.beans.$BeansEndpointDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.beans.impl.$DefaultBeanDefinitionDataDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.beans.impl.$RxJavaBeanDefinitionDataCollectorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.env.$EnvironmentEndpointDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.health.$HealthEndpoint$StatusConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.health.$HealthEndpointDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.health.filter.$HealthResultFilterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.$InfoEndpointDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.InfoSource[]"
},
{
  "name":"io.micronaut.management.endpoint.info.impl.$RxInfoAggregatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.source.$$ConfigurationInfoSourceDefinition$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.source.$BuildInfoSourceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.source.$ConfigurationInfoSourceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.info.source.$GitInfoSourceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.loggers.$LoggersEndpointDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.loggers.impl.$DefaultLoggersManagerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.loggers.impl.$Log4jLoggingSystemDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.loggers.impl.$LogbackLoggingSystemDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.processors.$DeleteEndpointRouteBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.processors.$ReadEndpointRouteBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.processors.$WriteEndpointRouteBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.refresh.$RefreshEndpointDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.routes.$RoutesEndpointDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.routes.impl.$DefaultRouteDataDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.routes.impl.$RxJavaRouteDataCollectorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.stop.$ServerStopEndpointDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.threads.$ThreadDumpEndpointDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.endpoint.threads.impl.$DefaultThreadInfoMapperDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.aggregator.$RxJavaHealthAggregatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.$DefaultHealthResult$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.DefaultHealthResult",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.micronaut.management.health.indicator.HealthIndicator[]"
},
{
  "name":"io.micronaut.management.health.indicator.HealthResult",
  "allDeclaredMethods":true
},
{
  "name":"io.micronaut.management.health.indicator.discovery.$DiscoveryClientHealthIndicatorConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.discovery.$DiscoveryClientHealthIndicatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.diskspace.$DiskSpaceIndicatorConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.diskspace.$DiskSpaceIndicatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.jdbc.$JdbcIndicatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicator$ApplicationEventListener$onServerStarted2$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicator$ApplicationEventListener$onServiceStarted1$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.indicator.service.$ServiceReadyHealthIndicatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.management.health.monitor.$HealthMonitorTaskDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.reactive.flow.converters.$FlowConverterRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.reactive.rxjava2.$RxInstrumenterFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.reactive.rxjava2.$RxJava2InstrumentationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.reactive.rxjava2.converters.$RxJavaConverterRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.annotation.$DefaultRetryPredicate$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.intercept.$DefaultRetryInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.intercept.$RecoveryInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.$ApplicationConfiguration$InstanceConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.$ApplicationConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.$CompositeMessageSourceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.env.$ConfigurationIntroductionAdviceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.$ThreadLocalCustomScopeDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.refresh.$RefreshInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.refresh.$RefreshScopeDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.converters.time.$TimeConverterRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$TextPlainCodecDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.scope.$RequestCustomScopeDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.server.watch.event.$FileWatchRestartListenerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.$DefaultTaskExceptionHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.$ScheduledExecutorTaskSchedulerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.async.$AsyncInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultExecutorSelectorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultThreadFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Configuration0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfigDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfigDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$UserExecutorConfiguration$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$UserExecutorConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.instrument.$ExecutorServiceInstrumenterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$DefaultWatchThreadDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$FileWatchCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$FileWatchConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.processor.$ScheduledMethodProcessorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.transaction.hibernate5.$HibernateTransactionManagerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.transaction.hibernate5.MicronautSessionContext",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.engine.spi.SessionFactoryImplementor"] }]
},
{
  "name":"io.micronaut.transaction.interceptor.$TransactionalEventInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.transaction.interceptor.$TransactionalInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.transaction.jdbc.$DataSourceTransactionManagerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.transaction.jdbc.$DelegatingDataSourceResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.transaction.jdbc.$TransactionAwareDataSourceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.transaction.jdbc.$TransactionalConnection$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.transaction.jdbc.$TransactionalConnectionInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.transaction.test.$DefaultTestTransactionExecutionListenerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.$ValidatingInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.exceptions.$ConstraintExceptionHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.exceptions.$ValidationExceptionHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultClockProviderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultValidatorConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultValidatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultValidatorFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$DefaultConstraintValidatorsDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$EmailValidatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$PatternValidatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.extractors.$DefaultValueExtractors$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.extractors.$DefaultValueExtractorsDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.messages.$DefaultValidationMessagesDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.resolver.$CompositeTraversableResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.$AnnotatedFilterRouteBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.$AnnotatedMethodRouteBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.$DefaultRouterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.naming.$ConfigurableUriNamingStrategyDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.naming.$HyphenatedUriNamingStrategyDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.resource.$StaticResourceConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.resource.$StaticResourceResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$ConfigurationDefaultVersionProviderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$RouteVersionFilterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$RoutesVersioningConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$VersionAwareRouterListenerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$HeaderVersionResolverConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$HeaderVersionResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$ParameterVersionResolverConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$ParameterVersionResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.websocket.interceptor.$ClientWebSocketInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$1"
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.CombinedChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.SimpleChannelInboundHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.embedded.EmbeddedChannel$2"
},
{
  "name":"io.netty.channel.socket.nio.NioServerSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.handler.codec.MessageToByteEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageCodec",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.codec.MessageToMessageDecoder",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.compression.JdkZlibEncoder",
  "methods":[{"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpContentDecoder",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.handler.codec.http.HttpContentDecompressor"
},
{
  "name":"io.netty.handler.codec.http.HttpContentEncoder",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpServerCodec"
},
{
  "name":"io.netty.handler.codec.http.HttpServerKeepAliveHandler",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.flow.FlowControlHandler",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.handler.stream.ChunkedWriteHandler",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.timeout.IdleStateHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.reactivex.Completable"
},
{
  "name":"io.reactivex.Maybe"
},
{
  "name":"io.reactivex.Observable"
},
{
  "name":"io.reactivex.Single"
},
{
  "name":"java.beans.PropertyVetoException"
},
{
  "name":"java.io.File",
  "methods":[{"name":"toPath","parameterTypes":[] }]
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.Serializable",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Class",
  "methods":[
    {"name":"getAnnotatedInterfaces","parameterTypes":[] }, 
    {"name":"getAnnotatedSuperclass","parameterTypes":[] }, 
    {"name":"getDeclaredMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, 
    {"name":"getMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, 
    {"name":"getNestHost","parameterTypes":[] }, 
    {"name":"getNestMembers","parameterTypes":[] }, 
    {"name":"isNestmateOf","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"java.lang.Comparable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Runtime",
  "methods":[{"name":"version","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"major","parameterTypes":[] }]
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[{"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods":[
    {"name":"defineClass","parameterTypes":["byte[]"] }, 
    {"name":"lookupClass","parameterTypes":[] }, 
    {"name":"lookupModes","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[
    {"name":"getInputArguments","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.AnnotatedArrayType",
  "methods":[{"name":"getAnnotatedGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedType",
  "methods":[{"name":"getType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Executable",
  "methods":[
    {"name":"getAnnotatedExceptionTypes","parameterTypes":[] }, 
    {"name":"getAnnotatedParameterTypes","parameterTypes":[] }, 
    {"name":"getAnnotatedReceiverType","parameterTypes":[] }, 
    {"name":"getParameterCount","parameterTypes":[] }, 
    {"name":"getParameters","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Field",
  "methods":[{"name":"getAnnotatedType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Method",
  "methods":[{"name":"getAnnotatedReturnType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Parameter",
  "methods":[
    {"name":"getModifiers","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"isNamePresent","parameterTypes":[] }
  ]
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address", "allowUnsafeAccess":true}]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.file.CopyOption"
},
{
  "name":"java.nio.file.CopyOption[]"
},
{
  "name":"java.nio.file.Files",
  "methods":[{"name":"move","parameterTypes":["java.nio.file.Path","java.nio.file.Path","java.nio.file.CopyOption[]"] }]
},
{
  "name":"java.nio.file.Path"
},
{
  "name":"java.nio.file.StandardCopyOption"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.MessageDigestSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.sql.Connection",
  "methods":[{"name":"createClob","parameterTypes":[] }]
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Statement[]"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.util.PropertyPermission"
},
{
  "name":"java.util.ServiceLoader",
  "methods":[{"name":"stream","parameterTypes":[] }]
},
{
  "name":"java.util.ServiceLoader$Provider",
  "methods":[{"name":"type","parameterTypes":[] }]
},
{
  "name":"java.util.UUID",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.sql.DataSource[]"
},
{
  "name":"javax.validation.ConstraintViolation"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"liquibase.AbstractExtensibleObject",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.AbstractChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.AbstractSQLChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.ChangeFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.ColumnConfig",
  "allDeclaredFields":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.ConstraintsConfig",
  "allDeclaredFields":true
},
{
  "name":"liquibase.change.core.AbstractModifyDataChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.AddAutoIncrementChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.AddColumnChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.AddDefaultValueChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.AddForeignKeyConstraintChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.AddLookupTableChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.AddNotNullConstraintChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.AddPrimaryKeyChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddUniqueConstraintChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.AlterSequenceChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.CreateIndexChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.CreateProcedureChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.CreateSequenceChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateTableChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateViewChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DeleteDataChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropAllForeignKeyConstraintsChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropColumnChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropDefaultValueChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropForeignKeyConstraintChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropIndexChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropNotNullConstraintChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropPrimaryKeyChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropProcedureChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropSequenceChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropTableChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropUniqueConstraintChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.DropViewChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.EmptyChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.ExecuteShellCommandChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.InsertDataChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.LoadDataChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.LoadUpdateDataChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.MergeColumnChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.ModifyDataTypeChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.OutputChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.RawSQLChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.RenameColumnChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.RenameSequenceChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.RenameTableChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.RenameViewChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.SQLFileChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.SetColumnRemarksChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.SetTableRemarksChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.StopChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.TagDatabaseChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.core.UpdateDataChange",
  "allPublicMethods":true
},
{
  "name":"liquibase.change.custom.CustomChangeWrapper",
  "allPublicMethods":true
},
{
  "name":"liquibase.changelog.StandardChangeLogHistoryService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.configuration.GlobalConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.configuration.HubConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.H2Database",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.jvm.JdbcConnection",
  "methods":[{"name":"getWrappedConnection","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.BooleanType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.DateTimeType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.IntType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.NumberType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.TimestampType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.UUIDType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.VarcharType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.executor.ExecutorService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.executor.jvm.JdbcExecutor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.hub.HubServiceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.license.LicenseServiceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.lockservice.StandardLockService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.logging.core.LogServiceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.parser.ChangeLogParserCofiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.plugin.AbstractPlugin",
  "allPublicMethods":true
},
{
  "name":"liquibase.pro.packaged.bu[]"
},
{
  "name":"liquibase.pro.packaged.km",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.pro.packaged.kn",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.serializer.AbstractLiquibaseSerializable",
  "allDeclaredFields":true
},
{
  "name":"liquibase.sql.visitor.AppendSqlVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sql.visitor.PrependSqlVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sql.visitor.RegExpReplaceSqlVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sql.visitor.ReplaceSqlVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"net.bytebuddy.ByteBuddy"
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.AllArguments",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Default",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultCall",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultMethod",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldValue",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Origin",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.StubValue",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Super",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.This",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.h2.Driver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.engine.Constants",
  "fields":[
    {"name":"BUILD_ID"}, 
    {"name":"VERSION_MAJOR"}, 
    {"name":"VERSION_MINOR"}
  ]
},
{
  "name":"org.h2.engine.Engine",
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.h2.jdbc.JdbcClob"
},
{
  "name":"org.h2.jdbc.JdbcLob",
  "methods":[{"name":"free","parameterTypes":[] }]
},
{
  "name":"org.h2.mvstore.db.MVTableEngine",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.annotations.common.reflection.ReflectionManager",
  "methods":[{"name":"reset","parameterTypes":[] }]
},
{
  "name":"org.hibernate.annotations.common.reflection.java.JavaReflectionManager",
  "methods":[{"name":"getXAnnotatedElement","parameterTypes":["java.lang.Package"] }]
},
{
  "name":"org.hibernate.annotations.common.reflection.java.JavaXMember",
  "methods":[{"name":"getMember","parameterTypes":[] }]
},
{
  "name":"org.hibernate.annotations.common.util.impl.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.boot.internal.DefaultSessionFactoryBuilderService",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.bytecode.internal.bytebuddy.ProxyFactoryFactoryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.cache.internal.DisabledCaching",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.cache.internal.NoCachingRegionFactory",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.cfg.beanvalidation.TypeSafeActivator",
  "methods":[{"name":"activate","parameterTypes":["org.hibernate.cfg.beanvalidation.ActivationContext"] }]
},
{
  "name":"org.hibernate.dialect.H2Dialect",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.engine.config.internal.ConfigurationServiceImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jndi.internal.JndiServiceImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.event.internal.EntityCopyNotAllowedObserver$$Lambda$923/0x0000000840aae040",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.event.service.internal.EventListenerRegistryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.event.spi.AutoFlushEventListener[]"
},
{
  "name":"org.hibernate.event.spi.DeleteEventListener[]"
},
{
  "name":"org.hibernate.event.spi.DirtyCheckEventListener[]"
},
{
  "name":"org.hibernate.event.spi.EventType",
  "allDeclaredFields":true
},
{
  "name":"org.hibernate.event.spi.EvictEventListener[]"
},
{
  "name":"org.hibernate.event.spi.FlushEntityEventListener[]"
},
{
  "name":"org.hibernate.event.spi.FlushEventListener[]"
},
{
  "name":"org.hibernate.event.spi.InitializeCollectionEventListener[]"
},
{
  "name":"org.hibernate.event.spi.LoadEventListener[]"
},
{
  "name":"org.hibernate.event.spi.LockEventListener[]"
},
{
  "name":"org.hibernate.event.spi.MergeEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PersistEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostDeleteEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostInsertEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostLoadEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostUpdateEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PreDeleteEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PreInsertEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PreLoadEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PreUpdateEventListener[]"
},
{
  "name":"org.hibernate.event.spi.RefreshEventListener[]"
},
{
  "name":"org.hibernate.event.spi.ReplicateEventListener[]"
},
{
  "name":"org.hibernate.event.spi.ResolveNaturalIdEventListener[]"
},
{
  "name":"org.hibernate.event.spi.SaveOrUpdateEventListener[]"
},
{
  "name":"org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.hql.internal.ast.HqlToken",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.DotNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.FromClause",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.FromElement",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.IdentNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.Node",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.ParameterNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.QueryNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.SelectClause",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.SqlFragment",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.SqlNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.id.Assigned",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.jmx.internal.DisabledJmxServiceImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.persister.entity.SingleTableEntityPersister",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.PersistentClass","org.hibernate.cache.spi.access.EntityDataAccess","org.hibernate.cache.spi.access.NaturalIdDataAccess","org.hibernate.persister.spi.PersisterCreationContext"] }]
},
{
  "name":"org.hibernate.persister.internal.PersisterFactoryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.persister.internal.StandardPersisterClassResolver",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.proxy.HibernateProxy",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.hibernate.proxy.ProxyConfiguration",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.stat.internal.StatisticsImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.tuple.entity.PojoEntityTuplizer",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.tuple.entity.EntityMetamodel","org.hibernate.mapping.PersistentClass"] }]
},
{
  "name":"org.slf4j.spi.LocationAwareLogger",
  "allDeclaredMethods":true
},
{
  "name":"pg.micronaut.graal.$Application$ApplicationEventListener$init1$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pg.micronaut.graal.$ApplicationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pg.micronaut.graal.controller.$ArticleControllerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pg.micronaut.graal.controller.$UserControllerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pg.micronaut.graal.domain.model.$Article$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pg.micronaut.graal.domain.model.$User$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pg.micronaut.graal.domain.model.Article",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }
  ]
},
{
  "name":"pg.micronaut.graal.domain.model.User",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }
  ]
},
{
  "name":"pg.micronaut.graal.domain.repository.$DataArticleRepository$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pg.micronaut.graal.domain.repository.$DataUserRepository$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pg.micronaut.graal.domain.repository.$JpaUserRepositoryAdapter$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pg.micronaut.graal.domain.repository.$JpaUserRepositoryAdapterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, 
    {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }
  ]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys", "allowUnsafeAccess":true}, 
    {"name":"selectedKeys", "allowUnsafeAccess":true}
  ]
},
{
  "name":"sun.security.provider.MD5",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA2$SHA256",
  "methods":[{"name":"<init>","parameterTypes":[] }]
}
]
